# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import pbvaccine_pb2 as vaccine__pb2


class VaccineStub(object):
  """service Vaccine
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SearchVaccine = channel.unary_unary(
        '/vaccine.Vaccine/SearchVaccine',
        request_serializer=vaccine__pb2.VaccineId.SerializeToString,
        response_deserializer=vaccine__pb2.VaccineDetail.FromString,
        )
    self.SearchVaccineAll = channel.unary_unary(
        '/vaccine.Vaccine/SearchVaccineAll',
        request_serializer=vaccine__pb2.EmptyData.SerializeToString,
        response_deserializer=vaccine__pb2.ListVaccine.FromString,
        )
    self.UpdateNoInjected = channel.unary_unary(
        '/vaccine.Vaccine/UpdateNoInjected',
        request_serializer=vaccine__pb2.InjectionParam.SerializeToString,
        response_deserializer=vaccine__pb2.ResultUpdate.FromString,
        )
    self.UpdateInjected = channel.unary_unary(
        '/vaccine.Vaccine/UpdateInjected',
        request_serializer=vaccine__pb2.InjectionParam.SerializeToString,
        response_deserializer=vaccine__pb2.ResultUpdate.FromString,
        )
    self.UpdatePlanInject = channel.unary_unary(
        '/vaccine.Vaccine/UpdatePlanInject',
        request_serializer=vaccine__pb2.InjectionParam.SerializeToString,
        response_deserializer=vaccine__pb2.ResultUpdate.FromString,
        )
    self.GetInjectionLog = channel.unary_unary(
        '/vaccine.Vaccine/GetInjectionLog',
        request_serializer=vaccine__pb2.GetInjectionLogRequest.SerializeToString,
        response_deserializer=vaccine__pb2.InjectionDetails.FromString,
        )


class VaccineServicer(object):
  """service Vaccine
  """

  def SearchVaccine(self, request, context):
    """search vaccine with vaccine_id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchVaccineAll(self, request, context):
    """search all vaccine
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateNoInjected(self, request, context):
    """set state to no injectioned
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateInjected(self, request, context):
    """set state to injectioned
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdatePlanInject(self, request, context):
    """set plan inject
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetInjectionLog(self, request, context):
    """get vaccine with account_id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VaccineServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SearchVaccine': grpc.unary_unary_rpc_method_handler(
          servicer.SearchVaccine,
          request_deserializer=vaccine__pb2.VaccineId.FromString,
          response_serializer=vaccine__pb2.VaccineDetail.SerializeToString,
      ),
      'SearchVaccineAll': grpc.unary_unary_rpc_method_handler(
          servicer.SearchVaccineAll,
          request_deserializer=vaccine__pb2.EmptyData.FromString,
          response_serializer=vaccine__pb2.ListVaccine.SerializeToString,
      ),
      'UpdateNoInjected': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateNoInjected,
          request_deserializer=vaccine__pb2.InjectionParam.FromString,
          response_serializer=vaccine__pb2.ResultUpdate.SerializeToString,
      ),
      'UpdateInjected': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateInjected,
          request_deserializer=vaccine__pb2.InjectionParam.FromString,
          response_serializer=vaccine__pb2.ResultUpdate.SerializeToString,
      ),
      'UpdatePlanInject': grpc.unary_unary_rpc_method_handler(
          servicer.UpdatePlanInject,
          request_deserializer=vaccine__pb2.InjectionParam.FromString,
          response_serializer=vaccine__pb2.ResultUpdate.SerializeToString,
      ),
      'GetInjectionLog': grpc.unary_unary_rpc_method_handler(
          servicer.GetInjectionLog,
          request_deserializer=vaccine__pb2.GetInjectionLogRequest.FromString,
          response_serializer=vaccine__pb2.InjectionDetails.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vaccine.Vaccine', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
