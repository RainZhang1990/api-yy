# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import pbfeed_pb2 as feed__pb2


class FeedServerStub(object):
  """service Feed
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateFeed = channel.unary_unary(
        '/feed.FeedServer/CreateFeed',
        request_serializer=feed__pb2.Feed.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.UpdateFeed = channel.unary_unary(
        '/feed.FeedServer/UpdateFeed',
        request_serializer=feed__pb2.UpdateFeedRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.DeleteFeed = channel.unary_unary(
        '/feed.FeedServer/DeleteFeed',
        request_serializer=feed__pb2.DeleteFeedRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.GetFeedList = channel.unary_unary(
        '/feed.FeedServer/GetFeedList',
        request_serializer=feed__pb2.FeedRequest.SerializeToString,
        response_deserializer=feed__pb2.FeedLists.FromString,
        )
    self.GetFeed = channel.unary_unary(
        '/feed.FeedServer/GetFeed',
        request_serializer=feed__pb2.GetFeedRequest.SerializeToString,
        response_deserializer=feed__pb2.Feed.FromString,
        )
    self.GetFeedType = channel.unary_unary(
        '/feed.FeedServer/GetFeedType',
        request_serializer=feed__pb2.FeedID.SerializeToString,
        response_deserializer=feed__pb2.FeedType.FromString,
        )
    self.CreateLikes = channel.unary_unary(
        '/feed.FeedServer/CreateLikes',
        request_serializer=feed__pb2.Likes.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.DeleteLikes = channel.unary_unary(
        '/feed.FeedServer/DeleteLikes',
        request_serializer=feed__pb2.Likes.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.GetLikesLists = channel.unary_unary(
        '/feed.FeedServer/GetLikesLists',
        request_serializer=feed__pb2.LikesRequest.SerializeToString,
        response_deserializer=feed__pb2.LikesLists.FromString,
        )
    self.LikesIsExists = channel.unary_unary(
        '/feed.FeedServer/LikesIsExists',
        request_serializer=feed__pb2.LikesIsExistsRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.CreateComments = channel.unary_unary(
        '/feed.FeedServer/CreateComments',
        request_serializer=feed__pb2.Comments.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.DeleteComments = channel.unary_unary(
        '/feed.FeedServer/DeleteComments',
        request_serializer=feed__pb2.DeleteRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.GetCommentsLists = channel.unary_unary(
        '/feed.FeedServer/GetCommentsLists',
        request_serializer=feed__pb2.GetCommentsListsRequest.SerializeToString,
        response_deserializer=feed__pb2.CommentsLists.FromString,
        )
    self.GetComment = channel.unary_unary(
        '/feed.FeedServer/GetComment',
        request_serializer=feed__pb2.GetCommentRequest.SerializeToString,
        response_deserializer=feed__pb2.Comments.FromString,
        )
    self.UpsertLastRead = channel.unary_unary(
        '/feed.FeedServer/UpsertLastRead',
        request_serializer=feed__pb2.LastReadRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.GetLastRead = channel.unary_unary(
        '/feed.FeedServer/GetLastRead',
        request_serializer=feed__pb2.GetLastReadRequest.SerializeToString,
        response_deserializer=feed__pb2.FeedID.FromString,
        )
    self.UpdateLikesCount = channel.unary_unary(
        '/feed.FeedServer/UpdateLikesCount',
        request_serializer=feed__pb2.UpdateCountRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.UpdateCommentsCount = channel.unary_unary(
        '/feed.FeedServer/UpdateCommentsCount',
        request_serializer=feed__pb2.UpdateCountRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.CreatePhoto = channel.unary_unary(
        '/feed.FeedServer/CreatePhoto',
        request_serializer=feed__pb2.PhotoInfo.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.DeletePhoto = channel.unary_unary(
        '/feed.FeedServer/DeletePhoto',
        request_serializer=feed__pb2.DeletePhotoRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.GetFeedSize = channel.unary_unary(
        '/feed.FeedServer/GetFeedSize',
        request_serializer=feed__pb2.FeedID.SerializeToString,
        response_deserializer=feed__pb2.FeedSize.FromString,
        )
    self.GetAlbum = channel.unary_unary(
        '/feed.FeedServer/GetAlbum',
        request_serializer=feed__pb2.GetAlbumRequest.SerializeToString,
        response_deserializer=feed__pb2.AlbumList.FromString,
        )
    self.UpsertAlbum = channel.unary_unary(
        '/feed.FeedServer/UpsertAlbum',
        request_serializer=feed__pb2.UpsertAlbumRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.GetCountDaily = channel.unary_unary(
        '/feed.FeedServer/GetCountDaily',
        request_serializer=feed__pb2.GetCountDailyRequest.SerializeToString,
        response_deserializer=feed__pb2.CountDailyList.FromString,
        )
    self.GetCountMonthly = channel.unary_unary(
        '/feed.FeedServer/GetCountMonthly',
        request_serializer=feed__pb2.GetCountMonthlyRequest.SerializeToString,
        response_deserializer=feed__pb2.CountDailyList.FromString,
        )
    self.GetLastPhoto = channel.unary_unary(
        '/feed.FeedServer/GetLastPhoto',
        request_serializer=feed__pb2.GetLastPhotoRequest.SerializeToString,
        response_deserializer=feed__pb2.GetLastPhotoReponse.FromString,
        )
    self.CountFeed = channel.unary_unary(
        '/feed.FeedServer/CountFeed',
        request_serializer=feed__pb2.CountFeedRequest.SerializeToString,
        response_deserializer=feed__pb2.CountFeedReponse.FromString,
        )
    self.FeedManagerList = channel.unary_unary(
        '/feed.FeedServer/FeedManagerList',
        request_serializer=feed__pb2.FeedManagerListRequest.SerializeToString,
        response_deserializer=feed__pb2.FeedManagerListReponse.FromString,
        )
    self.ShareFeed = channel.unary_unary(
        '/feed.FeedServer/ShareFeed',
        request_serializer=feed__pb2.ShareRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )
    self.CancelShare = channel.unary_unary(
        '/feed.FeedServer/CancelShare',
        request_serializer=feed__pb2.ShareRequest.SerializeToString,
        response_deserializer=feed__pb2.ResultOfAction.FromString,
        )


class FeedServerServicer(object):
  """service Feed
  """

  def CreateFeed(self, request, context):
    """create feed
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateFeed(self, request, context):
    """update feed
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteFeed(self, request, context):
    """delete feed
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeedList(self, request, context):
    """get feed lists by space_id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeed(self, request, context):
    """get feed by feed_Id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeedType(self, request, context):
    """get feedtype by feed_id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateLikes(self, request, context):
    """create likes 点赞
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteLikes(self, request, context):
    """delete likes 取消赞
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLikesLists(self, request, context):
    """get likes list 获取点赞列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LikesIsExists(self, request, context):
    """点赞信息是否存在
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateComments(self, request, context):
    """create comments 发表评论
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteComments(self, request, context):
    """delete comments 删除评论
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCommentsLists(self, request, context):
    """get comments list 获取评论列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetComment(self, request, context):
    """get comment by comment_id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpsertLastRead(self, request, context):
    """upsert last read
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLastRead(self, request, context):
    """get last read 获取最新的FeedID
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateLikesCount(self, request, context):
    """update likes count 点赞或取消赞后 点赞数增减更新
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateCommentsCount(self, request, context):
    """update comments count 评论或删除评论后 评论数增减更新
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreatePhoto(self, request, context):
    """create photo
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeletePhoto(self, request, context):
    """delete photo
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeedSize(self, request, context):
    """get feed_size 获取一个Feed所有附件大小的总数
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAlbum(self, request, context):
    """rpc Get album 获取相册
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpsertAlbum(self, request, context):
    """rpc Upsert album 更新相册
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCountDaily(self, request, context):
    """获取相册文件详情列表(某天)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCountMonthly(self, request, context):
    """获取相册文件详情列表(某月)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLastPhoto(self, request, context):
    """获取最新的一个文件附件
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CountFeed(self, request, context):
    """CountFeed 获取Feed统计信息(feed总数,纯文字总数, 照片总数, 音频总数, 视频总数)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FeedManagerList(self, request, context):
    """FeedManagerList
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShareFeed(self, request, context):
    """share feed
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelShare(self, request, context):
    """cancel share
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FeedServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateFeed': grpc.unary_unary_rpc_method_handler(
          servicer.CreateFeed,
          request_deserializer=feed__pb2.Feed.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'UpdateFeed': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateFeed,
          request_deserializer=feed__pb2.UpdateFeedRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'DeleteFeed': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteFeed,
          request_deserializer=feed__pb2.DeleteFeedRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'GetFeedList': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeedList,
          request_deserializer=feed__pb2.FeedRequest.FromString,
          response_serializer=feed__pb2.FeedLists.SerializeToString,
      ),
      'GetFeed': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeed,
          request_deserializer=feed__pb2.GetFeedRequest.FromString,
          response_serializer=feed__pb2.Feed.SerializeToString,
      ),
      'GetFeedType': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeedType,
          request_deserializer=feed__pb2.FeedID.FromString,
          response_serializer=feed__pb2.FeedType.SerializeToString,
      ),
      'CreateLikes': grpc.unary_unary_rpc_method_handler(
          servicer.CreateLikes,
          request_deserializer=feed__pb2.Likes.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'DeleteLikes': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteLikes,
          request_deserializer=feed__pb2.Likes.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'GetLikesLists': grpc.unary_unary_rpc_method_handler(
          servicer.GetLikesLists,
          request_deserializer=feed__pb2.LikesRequest.FromString,
          response_serializer=feed__pb2.LikesLists.SerializeToString,
      ),
      'LikesIsExists': grpc.unary_unary_rpc_method_handler(
          servicer.LikesIsExists,
          request_deserializer=feed__pb2.LikesIsExistsRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'CreateComments': grpc.unary_unary_rpc_method_handler(
          servicer.CreateComments,
          request_deserializer=feed__pb2.Comments.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'DeleteComments': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteComments,
          request_deserializer=feed__pb2.DeleteRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'GetCommentsLists': grpc.unary_unary_rpc_method_handler(
          servicer.GetCommentsLists,
          request_deserializer=feed__pb2.GetCommentsListsRequest.FromString,
          response_serializer=feed__pb2.CommentsLists.SerializeToString,
      ),
      'GetComment': grpc.unary_unary_rpc_method_handler(
          servicer.GetComment,
          request_deserializer=feed__pb2.GetCommentRequest.FromString,
          response_serializer=feed__pb2.Comments.SerializeToString,
      ),
      'UpsertLastRead': grpc.unary_unary_rpc_method_handler(
          servicer.UpsertLastRead,
          request_deserializer=feed__pb2.LastReadRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'GetLastRead': grpc.unary_unary_rpc_method_handler(
          servicer.GetLastRead,
          request_deserializer=feed__pb2.GetLastReadRequest.FromString,
          response_serializer=feed__pb2.FeedID.SerializeToString,
      ),
      'UpdateLikesCount': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateLikesCount,
          request_deserializer=feed__pb2.UpdateCountRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'UpdateCommentsCount': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateCommentsCount,
          request_deserializer=feed__pb2.UpdateCountRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'CreatePhoto': grpc.unary_unary_rpc_method_handler(
          servicer.CreatePhoto,
          request_deserializer=feed__pb2.PhotoInfo.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'DeletePhoto': grpc.unary_unary_rpc_method_handler(
          servicer.DeletePhoto,
          request_deserializer=feed__pb2.DeletePhotoRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'GetFeedSize': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeedSize,
          request_deserializer=feed__pb2.FeedID.FromString,
          response_serializer=feed__pb2.FeedSize.SerializeToString,
      ),
      'GetAlbum': grpc.unary_unary_rpc_method_handler(
          servicer.GetAlbum,
          request_deserializer=feed__pb2.GetAlbumRequest.FromString,
          response_serializer=feed__pb2.AlbumList.SerializeToString,
      ),
      'UpsertAlbum': grpc.unary_unary_rpc_method_handler(
          servicer.UpsertAlbum,
          request_deserializer=feed__pb2.UpsertAlbumRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'GetCountDaily': grpc.unary_unary_rpc_method_handler(
          servicer.GetCountDaily,
          request_deserializer=feed__pb2.GetCountDailyRequest.FromString,
          response_serializer=feed__pb2.CountDailyList.SerializeToString,
      ),
      'GetCountMonthly': grpc.unary_unary_rpc_method_handler(
          servicer.GetCountMonthly,
          request_deserializer=feed__pb2.GetCountMonthlyRequest.FromString,
          response_serializer=feed__pb2.CountDailyList.SerializeToString,
      ),
      'GetLastPhoto': grpc.unary_unary_rpc_method_handler(
          servicer.GetLastPhoto,
          request_deserializer=feed__pb2.GetLastPhotoRequest.FromString,
          response_serializer=feed__pb2.GetLastPhotoReponse.SerializeToString,
      ),
      'CountFeed': grpc.unary_unary_rpc_method_handler(
          servicer.CountFeed,
          request_deserializer=feed__pb2.CountFeedRequest.FromString,
          response_serializer=feed__pb2.CountFeedReponse.SerializeToString,
      ),
      'FeedManagerList': grpc.unary_unary_rpc_method_handler(
          servicer.FeedManagerList,
          request_deserializer=feed__pb2.FeedManagerListRequest.FromString,
          response_serializer=feed__pb2.FeedManagerListReponse.SerializeToString,
      ),
      'ShareFeed': grpc.unary_unary_rpc_method_handler(
          servicer.ShareFeed,
          request_deserializer=feed__pb2.ShareRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
      'CancelShare': grpc.unary_unary_rpc_method_handler(
          servicer.CancelShare,
          request_deserializer=feed__pb2.ShareRequest.FromString,
          response_serializer=feed__pb2.ResultOfAction.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'feed.FeedServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
